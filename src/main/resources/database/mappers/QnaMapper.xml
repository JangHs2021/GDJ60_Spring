<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="com.iu.home.board.qna.QnaDAO">
  		
  		<sql id="qnaCondition">
	  			
	  		<if test="kind == 'title'">
	  			WHERE TITLE LIKE '%' || #{search} || '%'
	  		</if>
	  			
	  		<if test="kind == 'contents'">
	  			WHERE CONTENTS LIKE '%' || #{search} || '%'
	  		</if>
	  			
	  		<if test="kind == 'writer'">
	  			WHERE WRITER LIKE '%' || #{search} || '%'
	  		</if>
	  		
  		</sql>
  		
  		<select id="getTotalCount" resultType="Long" parameterType="Pager">
  			SELECT COUNT(NUM) FROM QNA
  			
  			<include refid="qnaCondition"></include>
  		</select>
  		
  		<select id="getBoardList" resultType="QnaDTO" parameterType="Pager">
  			SELECT * FROM
  			(
	  			SELECT ROWNUM R, N.* FROM
		  			(
			  			SELECT NUM, TITLE, WRITER, REGDATE, HIT, DEPTH FROM QNA
			  			<include refid="qnaCondition"></include>
			  			ORDER BY REF DESC, STEP ASC
		  			) N
  			)
  			WHERE R BETWEEN #{startRow} AND #{lastRow}
  		</select>
  		
  		<select id="getBoardDetail" resultMap="getBoardDetailResult" parameterType="BoardDTO">
  			SELECT *
			FROM QNA
				LEFT OUTER JOIN
				QNAFILES
				USING(NUM)
  			WHERE NUM = #{num}
  		</select>
  		
  		<resultMap type="QnaDTO" id="getBoardDetailResult">
  			<id column="NUM" property="num"/>
  			<result column="TITLE" property="title"/>
  			<result column="WRITER" property="writer"/>
  			<result column="CONTENTS" property="contents"/>
  			<result column="REGDATE" property="regDate"/>
  			<result column="HIT" property="hit"/>
  			<result column="DEPTH" property="depth"/>
  			
  			<collection property="boardFileDTOs" javaType="List" ofType="BoardFileDTO">
  				<id column="FILENUM" property="fileNum"/>
  				<result column="FILENAME" property="fileName"/>
  				<result column="ORINAME" property="oriName"/>
  			</collection>
  			
  		</resultMap>
  		
  		<insert id="setBoardAdd" parameterType="BbsDTO">
  			<selectKey keyProperty="num" resultType="Long" order="BEFORE">
				SELECT QNA_SEQ.NEXTVAL FROM DUAL
			</selectKey>
  			INSERT INTO QNA (NUM, TITLE, CONTENTS, WRITER, REGDATE, HIT, REF, STEP, DEPTH)
  			VALUES (#{num}, #{title}, #{contents}, #{writer}, SYSDATE, 0, #{num}, 0, 0)
  		</insert>
  		
  		<update id="setStepUpdate" parameterType="QnaDTO">
  			UPDATE QNA SET STEP = STEP + 1 
  			WHERE REF = #{ref} AND STEP > #{step}  
  		</update>
  		
  		<insert id="setReplyAdd" parameterType="QnaDTO">
  			INSERT INTO QNA (NUM, TITLE, CONTENTS, WRITER, REGDATE, HIT, REF, STEP, DEPTH)
  			VALUES (QNA_SEQ.NEXTVAL, #{title}, #{contents}, #{writer}, SYSDATE, 0, #{ref}, #{step}, #{depth})
  		</insert>
  		
  		<insert id="setBoardFileAdd" parameterType="BoardFileDTO">
  			INSERT INTO QNAFILES (FILENUM, NUM, FILENAME, ORINAME)
  			VALUES (QNA_SEQ.NEXTVAL, #{num}, #{fileName}, #{oriName})
  		</insert>
  		
  		<delete id="setBoardDelete" parameterType="BbsDTO">
  			DELETE QNA WHERE NUM = #{num}
  		</delete>
  		
  		<select id="getBoardFileList" resultType="BoardFileDTO" parameterType="BbsDTO">
  			SELECT * FROM QNAFILES WHERE NUM = #{num}
  		</select>
  		
  		<select id="getBoardFileDetail" resultType="BoardFileDTO" parameterType="BoardFileDTO">
  			SELECT * FROM QNAFILES WHERE FILENUM = #{fileNum}
  		</select>
  		
  		<update id="setBoardUpdate" parameterType="BbsDTO">
  			UPDATE QNA SET TITLE = #{title}, CONTENTS = #{contents}
  			WHERE NUM = #{num}
  		</update>
  		
  		<delete id="setBoardFileDelete" parameterType="Long">
  			DELETE QNAFILES WHERE FILENUM = #{fileNum}
  		</delete>
  		
  	</mapper>